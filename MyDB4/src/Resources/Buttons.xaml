<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="ButtonPressedBrush" Color="{DynamicResource AccentColor}" />
    <SolidColorBrush x:Key="ButtonHoverBrush" Color="{DynamicResource AccentColor}" Opacity="0.2" />

    <Style x:Key="ToolBarTrayStyle" TargetType="ToolBarTray">
        <!--<Setter Property="Background" Value="Transparent"/>-->
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="DockPanel.Dock" Value="Top"/>
    </Style>

    <Style x:Key="ToolBarButtonStyle" TargetType="Button">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="#95a5a6"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="pack://application:,,,/FontAwesome.WPF;component/#FontAwesome"/>
        <Setter Property="Width" Value="45"/>
        <!--<Setter Property="Height" Value="20"/>-->
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PART_ContentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="brdr" Storyboard.TargetProperty="Opacity" To="0.2" Duration="0:0:0.150" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="brdr" Storyboard.TargetProperty="Opacity" To="0.4" Duration="0:0:0.150" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidFocused" />
                                <VisualState x:Name="InvalidUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="brdr" Background="#95a5a6" Opacity="0"/>
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="#A5FFFFFF"
                                   IsHitTestVisible="False"
                                   Opacity="0" />
                        <ContentControl x:Name="PART_ContentPresenter"
                                        Content="{TemplateBinding Content}"                                        
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        Padding="{TemplateBinding Padding}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <Style x:Key="IconFlatButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}"/>
        <Setter Property="Template">
        <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Border" Margin="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                        <Rectangle Fill="{TemplateBinding Foreground}"
                                   VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                   Margin="{TemplateBinding Padding}">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Uniform"
                                             Visual="{Binding Tag, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Border>                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonHoverBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" Value="{StaticResource ButtonPressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter Property="Foreground" Value="Gray" />-->
                            <!--<Setter Property="Background" Value="White" TargetName="Border"/>-->
                            <Setter Property="Opacity" Value="0.2" TargetName="Border"/>
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SaveButtonStyle" TargetType="Button" BasedOn="{StaticResource IconFlatButtonStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding NeedSave}" Value="True">
                <Setter Property="Foreground" Value="{StaticResource AlizarinBrush}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>